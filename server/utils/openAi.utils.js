import { GoogleGenerativeAI } from "@google/generative-ai";
import dotenv from "dotenv";

// Load environment variables
dotenv.config();

// Get API key from environment variable
const API_KEY = process.env.GEMINI_API_KEY;

// Initialize Google Generative AI client
const genAI = new GoogleGenerativeAI(API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" }); // Explicitly using a potentially free-tier friendly model

/**
 * Generate a review summary using Google's Gemini Pro model (free tier focused).
 *
 * @param {string[]} reviews - Array of review strings.
 * @param {string} productName - Name of the product.
 * @returns {Promise<string>} Summary string.
 */
export async function summarizeReviews(reviews, productName = 'the product') {
  if (!reviews || reviews.length === 0) {
    return 'No reviews provided.';
  }

  // Validate API key
  if (!API_KEY) {
    console.error("GEMINI_API_KEY not found in environment variables");
    return 'Unable to generate summary: Gemini API key not found. Please ensure GEMINI_API_KEY is set in your environment.';
  }

  const combinedReviews = reviews.slice(0, 30).join('\n\n'); // Limit to first 30 reviews for token control

  const prompt = `
    You are a helpful assistant. Read the following customer reviews for the product "${productName}" listed on Amazon.
    Generate a concise summary that highlights the key pros, cons, and general sentiment.

    Reviews:
    ${combinedReviews}

    Summary:
  `;

  try {
    const result = await model.generateContent({
      contents: [{ role: "user", parts: [{ text: prompt }] }],
    });
    const response = await result.response;
    const text = response.candidates?.[0]?.content?.parts?.[0]?.text;

    if (text) {
      return text.trim();
    } else {
      console.warn("No text generated by Gemini.");
      return 'Unable to generate summary: No response from the model.';
    }
  } catch (error) {
    console.error('Error generating summary with Gemini (Free Tier):', error);

    if (error.message && error.message.includes('API key not found')) {
      return 'Unable to generate summary: Gemini API key not found. Please ensure GEMINI_API_KEY is set in your environment.';
    }
    if (error.message && error.message.includes('quota') || error.message && error.message.includes('rate limit')) {
      return 'Unable to generate summary: Gemini free tier quota or rate limit exceeded. Please try again later or consider upgrading if your usage is high.';
    }

    return 'An error occurred while generating the summary using Gemini (Free Tier).';
  }
}